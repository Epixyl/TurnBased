<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ground</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = 0;
hp = 10;
state = -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_control.selected != -1{
    with obj_tile action = 0;
    if state = 0 &amp;&amp; obj_control.shoppick != -1{
        with obj_tile{
            if x = other.x &amp;&amp; y = other.y other.state = -1;
        }
        if state = 0 &amp;&amp; ((obj_control.turn = 1 &amp;&amp; obj_control.gold1 &gt;= get_cost(obj_control.shoppick)) || (obj_control.turn = -1 &amp;&amp; obj_control.gold2 &gt;= get_cost(obj_control.shoppick))){
            if obj_control.turn = 1 obj_control.gold1 -= get_cost(obj_control.shoppick); else obj_control.gold2 -= get_cost(obj_control.shoppick);
            ID = instance_create(x,y,obj_tile);
            ds_grid_set(obj_control.unitgrid,getc(x),getc(y),ID);
            ID.type = obj_control.shoppick;
            ID.side = obj_control.turn;
            get_stats(ID);
            ID.done = 2;
            obj_control.selected.done = 2;
        }
    }
    if state = 1{
        with obj_tile{
            if (x = other.x &amp;&amp; y = other.y) other.state = -1;
            if (obj_control.selected.water = 1 &amp;&amp; (other.type != 1 &amp;&amp; other.type != 4)) other.state = -1;
            //if (obj_control.selected.water = 0 &amp;&amp; other.type = 1) other.state = -1;
        }
        if state = 1{
            ds_grid_set(obj_control.unitgrid,getc(obj_control.selected.x),getc(obj_control.selected.y),0);
            obj_control.selected.x = x;
            obj_control.selected.y = y;
            ds_grid_set(obj_control.unitgrid,getc(x),getc(y),obj_control.selected);
            obj_control.selected.done = 1;
            if obj_control.selected.type = 6 || obj_control.selected.type = 13 obj_control.selected.done = 2;
        }
    }
    if state = 2{
        i = -1;
        with obj_tile{
            if x = other.x &amp;&amp; y = other.y &amp;&amp; id != obj_control.selected &amp;&amp; id.side = -obj_control.selected.side other.i = id;
            if x = other.x &amp;&amp; y = other.y  &amp;&amp; id.side = 0 other.i = id;
        }
        if i != -1{
            if i.side != 0{
                if i != -1{
                    attack(obj_control.selected.id,i);
                    if obj_control.animate = -1{
                        if abs(getc(i.x)-getc(obj_control.selected.x))+abs(getc(i.y)-getc(obj_control.selected.y)) &lt;= attack_range(i.type) {
                            if i.type != 3 || abs(getc(i.x)-getc(obj_control.selected.x))+abs(getc(i.y)-getc(obj_control.selected.y)) &gt; 1{
                                if i.type != 6 &amp;&amp; i.type != 11 &amp;&amp; i.type != 13 &amp;&amp; i.type != 17{
                                    if !(i.melee = 1 &amp;&amp; obj_control.selected.flying = 1)
                                        attack(i,obj_control.selected.id);
                                }
                            }
                        }
                    }
                    obj_control.selected.done = 2;
                }
            }
            else{
                i.sway++;
                obj_control.selected.done = 2;
            }
        }
    }
    if state = 3{
        i = -1;
        if obj_control.selected.store = -1{
            with obj_tile{
                if x = other.x &amp;&amp; y = other.y &amp;&amp; side != obj_control.turn other.state = -1;
                if x = other.x &amp;&amp; y = other.y &amp;&amp; id != obj_control.selected &amp;&amp; side = obj_control.selected.side &amp;&amp; type != 1 &amp;&amp; type != 9 &amp;&amp; type != 8 &amp;&amp; type != 6 &amp;&amp; type != 10 &amp;&amp; type != 11 &amp;&amp; water != 1 other.i = id;
            }
            if state = 3 &amp;&amp; i != -1{
                i.x = -500;
                i.y = -500;
                ds_grid_set(obj_control.unitgrid,getc(x),getc(y),0);
                obj_control.selected.store = i.id;
            }
        } else {
            with obj_tile{
                if x = other.x &amp;&amp; y = other.y other.state = -1;
            }
            if state = 3{
                obj_control.selected.store.x = x;
                obj_control.selected.store.y = y;
                ds_grid_set(obj_control.unitgrid,getc(x),getc(y),obj_control.selected.store);
                obj_control.selected.store.done = 2;
                obj_control.selected.store = -1;
                obj_control.selected.done = 2;
            }
        
        }
    }
    with obj_ground state = -1;
    with obj_shop instance_destroy();
    obj_control.shoppick = -1;
    obj_control.selected = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_ground,type,x,y);
draw_set_halign(fa_left);
if state = 1 || state = 9{
    draw_sprite(spr_indicator,0,x,y); 
}else{
if state = 2 || state = 10 draw_sprite(spr_indicator,1,x,y);
else {if state != -1 draw_sprite(spr_indicator,9,x,y);}}
//draw_text(x,y,state);

if obj_control.checker = 1{
    if (getc(x)+getc(y)) mod 2 = 0{
    draw_set_alpha(0.1);
    draw_set_color(c_black);
    draw_rectangle(x,y,x+32,y+32,false);
    draw_set_alpha(1);
    }
}
//draw_set_font(ft_dmg);
//draw_text(x,y+16,ds_grid_get(obj_control.unitgrid,getc(x),getc(y))-100000);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
